{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Bowline is a set of configurable tools to easily preprocess your data for data science and machine learning. If you're familiar with Python, you can install Bowline with pip, the Python package manager. Note that Bowline currently only supports Python 3.7+. Why the name? With raw datasets typically being messy and hard to \"wrangle\", I decided to name this set of tools after the bowline knot.","title":"Home"},{"location":"#home","text":"Bowline is a set of configurable tools to easily preprocess your data for data science and machine learning. If you're familiar with Python, you can install Bowline with pip, the Python package manager. Note that Bowline currently only supports Python 3.7+.","title":"Home"},{"location":"#why-the-name","text":"With raw datasets typically being messy and hard to \"wrangle\", I decided to name this set of tools after the bowline knot.","title":"Why the name?"},{"location":"getting-started/installation/","text":"Getting started This section will lead you all the way from installation to implementation in a few easy steps. Installation From PyPI Bowline can be installed with pip : $ pip install bowline This will automatically install compatible versions of all dependencies. Pandas and Scikit-Learn . Bowline always strives to support the latest versions, so there's no need to install those packages separately. From GitHub Bowline can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/mgancita/bowline.git This may contain un-released features so use at your own risk.","title":"Installation"},{"location":"getting-started/installation/#getting-started","text":"This section will lead you all the way from installation to implementation in a few easy steps.","title":"Getting started"},{"location":"getting-started/installation/#installation","text":"","title":"Installation"},{"location":"getting-started/installation/#from-pypi","text":"Bowline can be installed with pip : $ pip install bowline This will automatically install compatible versions of all dependencies. Pandas and Scikit-Learn . Bowline always strives to support the latest versions, so there's no need to install those packages separately.","title":"From PyPI"},{"location":"getting-started/installation/#from-github","text":"Bowline can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/mgancita/bowline.git This may contain un-released features so use at your own risk.","title":"From GitHub"},{"location":"getting-started/quickstart/","text":"Quickstart Overview Bowline is split up into Preprocessors and PostProcessors and are stored in bowline.preprocessors and bowline.postprocessors , respectively. They're all made with a simple implementation as the default but contain extensive advanced configurations for processing. Lets start with the simplest one. Load in processor Lets load in the StandardPreprocessor . from bowline.preprocessors import StandardPreprocessor Process Data Now we read in a csv, pass it to StandardPreprocessor with some dataset specific information, and finally process the dataset for a given target variable. import pandas as pd raw_data = pd.read_csv('path/to/your/file') preprocessor = StandardPrepreocessor( data = data, numerical_features = [\"age\", \"capital-gain\"], binary_features = [\"sex\"], categoric_features = [\"occupation\", \"education\"] ) processed_data = preprocessor.process(target=\"sex\") Further configuration All Preprocessors and Postprocessors have additional parameters to configure how the data is processed. Currently, there is no official documentation for it but each class has extensive docstings to help with implementation.","title":"Quickstart"},{"location":"getting-started/quickstart/#quickstart","text":"","title":"Quickstart"},{"location":"getting-started/quickstart/#overview","text":"Bowline is split up into Preprocessors and PostProcessors and are stored in bowline.preprocessors and bowline.postprocessors , respectively. They're all made with a simple implementation as the default but contain extensive advanced configurations for processing. Lets start with the simplest one.","title":"Overview"},{"location":"getting-started/quickstart/#load-in-processor","text":"Lets load in the StandardPreprocessor . from bowline.preprocessors import StandardPreprocessor","title":"Load in processor"},{"location":"getting-started/quickstart/#process-data","text":"Now we read in a csv, pass it to StandardPreprocessor with some dataset specific information, and finally process the dataset for a given target variable. import pandas as pd raw_data = pd.read_csv('path/to/your/file') preprocessor = StandardPrepreocessor( data = data, numerical_features = [\"age\", \"capital-gain\"], binary_features = [\"sex\"], categoric_features = [\"occupation\", \"education\"] ) processed_data = preprocessor.process(target=\"sex\")","title":"Process Data"},{"location":"getting-started/quickstart/#further-configuration","text":"All Preprocessors and Postprocessors have additional parameters to configure how the data is processed. Currently, there is no official documentation for it but each class has extensive docstings to help with implementation.","title":"Further configuration"}]}